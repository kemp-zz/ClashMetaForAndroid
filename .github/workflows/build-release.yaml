name: Build Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Release Tag (v2.x.x)'
        required: true

jobs:
  BuildRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout submodules
        run: git submodule update --init --recursive --remote

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Convert and set version env
        id: process-version
        run: |
          VERSION_TAG=${{ inputs.release-tag }}
          VERSION_TAG=${VERSION_TAG#v} # remove the 'v' prefix
          IFS='.' read -ra VERSION_PARTS <<< "$VERSION_TAG" # split into array
          VERSION_CODE=$(printf "%1d%02d%03d" "${VERSION_PARTS[0]}" "${VERSION_PARTS[1]}" "${VERSION_PARTS[2]}")
          VERSION_NAME=$VERSION_TAG
          echo "versionCode=$VERSION_CODE" >> $GITHUB_ENV
          echo "versionName=$VERSION_NAME" >> $GITHUB_ENV

      - name: Re-write version in build.gradle.kts
        run: |
          sed -i "s/^versionCode .*/versionCode ${{ env.versionCode }}/" build.gradle.kts
          sed -i "s/^versionName .*/versionName \"${{ env.versionName }}\"/" build.gradle.kts
        
      - name: Commit and push if changes
        run: |
          changes=$(git diff --name-only)
          if [ "$changes" ]; then
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            git add build.gradle.kts
            git commit -m "Bump version to ${{ env.versionName }} (${{ env.versionCode }})"
            git tag "v${{ env.versionName }}"
            git push origin "v${{ env.versionName }}"
          fi

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: '7.4.2'

      - name: Build with Gradle
        run: ./gradlew assembleMetaRelease --no-daemon

      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ inputs.release-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: ${{ inputs.release-tag }}
          files: app/build/outputs/apk/meta/release/*
          generate_release_notes: true

      - name: Release Changelog Builder
        uses: mikepenz/release-changelog-builder-action@v4.1.1
        with:
          configuration: '{"ignore_labels": ["Update"]}'
